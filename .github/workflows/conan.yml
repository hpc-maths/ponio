name: ponio CI - [conan]

on: [pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
        compiler:
          - llvm
          - gcc
        CMAKE_GENERATOR:
          - "Ninja Multi-Config"
    steps:
      - uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.conan2
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ hashFiles('./conanfile.py')}}-${{ matrix.CMAKE_GENERATOR }}-${{ hashFiles('**/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.compiler }}-${{ hashFiles('./conanfile.py') }}-
      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows' )}}
          cmake: true
          ninja: true
          vcpkg: false
          ccache: false
          conan: 2.0.17
          clangtidy: false
          task: false
          cppcheck: false
          gcovr: false
          opencppcoverage: false
      - name: Install dependencies
        run: |
          conan profile detect --force
          conan install . --output-folder=build --build=missing -s compiler.cppstd=20
          python3 -m pip install -r environment/requirements.txt
      - name: Configure CMake
        run: |
          cmake . -B build -G "${{matrix.CMAKE_GENERATOR}}" -DCMAKE_TOOLCHAIN_FILE="conan_toolchain.cmake" -DBUILD_TESTS=ON
      - name: Build
        run: |
          cmake --build build --config Release
      - name: Unix test
        if: runner.os != 'Windows'
        run: |
          ./build/solver/test/Release/ponio_tests
      - name: Windows test
        if: runner.os == 'Windows'
        run: |
          .\build\solver\test\Release\ponio_tests.exe
