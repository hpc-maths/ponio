name: ponio CI - [midnight]

on:
  schedule:
    - cron: "0 0 * * *" # runs daily at 00:00

jobs:
  check_new_commit:
    runs-on: ubuntu-latest
    outputs:
      nb_commits: ${{ steps.new_commits.outputs.nb_commits }}
    steps:
      - uses: actions/checkout@v4
      - id: new_commits
        run: echo "nb_commits=$(git log --oneline --since '24 hours ago' | wc -l)" >> $GITHUB_OUTPUT
  # clang-tidy check
  clang-tidy-check:
    needs: check_new_commit
    if: github.repository == 'hpc-maths/ponio' && needs.check_new_commit.outputs.nb_commits > 0
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # issue with gcc-14 https://github.com/llvm/llvm-project/issues/131466
      - name: Remove GCC from runner image
        shell: bash
        run: |
          sudo rm -f /etc/apt/sources.list.d/ubuntu-toolchain-r-ubuntu-test-noble.list
          sudo apt-get update
          sudo apt-get install -y --allow-downgrades libc6=2.39-0ubuntu8.6 libc6-dev=2.39-0ubuntu8.6 libstdc++6=14.2.0-4ubuntu2~24.04 libgcc-s1=14.2.0-4ubuntu2~24.04
      - name: Install clang-tidy
        shell: bash
        run: |
          sudo apt-get install -y clang-tidy
      - uses: prefix-dev/setup-pixi@v0.8.8
        with:
          pixi-version: v0.44.0
          cache: true
      - name: Install Python
        run: pixi add python
      - name: Install compdb
        shell: pixi run bash {0}
        run: |
          pip install compdb
      - name: Configure
        shell: pixi run bash {0}
        run: |
          pixi run build_debug
          compdb -p build list > compile_commands.json
      - name: Run clang-tidy on ponio
        shell: pixi run bash {0}
        run: |
          run-clang-tidy -extra-arg=-std=c++20 -header-filter=ponio/include/ponio/
  # long time tests
  long-test:
    needs: check_new_commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: prefix-dev/setup-pixi@v0.8.8
        with:
          pixi-version: v0.44.0
          cache: true
      - name: Install compiler and Python
        run: pixi add cxx-compiler python
      - name: Install samurai
        run: pixi add samurai
      - name: Build
        run: pixi run build_long_test
      - name: Run tests
        run: pixi run long_test
