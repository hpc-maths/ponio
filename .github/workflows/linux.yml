name: Linux CI - compiler tests

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - cpp-version: gcc-10
            package: "gcc-10 g++-10"
            cc: "gcc-10"
            cxx: "g++-10"
          - cpp-version: gcc-11
            package: "gcc-11 g++-11"
            cc: "gcc-11"
            cxx: "g++-11"
          - cpp-version: gcc-12
            package: "gcc-12 g++-12"
            cc: "gcc-12"
            cxx: "g++-12"
          - cpp-version: clang-12
            package: "clang-12"
            cc: "clang-12"
            cxx: "clang++-12"
          - cpp-version: clang-13
            package: "clang-13"
            cc: "clang-13"
            cxx: "clang++-13"
          - cpp-version: clang-14
            package: "clang-14"
            cc: "clang-14"
            cxx: "clang++-14"
          - cpp-version: clang-15
            package: "clang-15"
            cc: "clang-15"
            cxx: "clang++-15"

    steps:
      - uses: actions/checkout@v3
      - name: Remove GCC 13 from runner image
        shell: bash
        run: |
            sudo rm -f /etc/apt/sources.list.d/ubuntu-toolchain-r-ubuntu-test-jammy.list
            sudo apt-get update
            sudo apt-get install -y --allow-downgrades libc6=2.35-0ubuntu3.6 libc6-dev=2.35-0ubuntu3.6 libstdc++6=12.3.0-1ubuntu1~22.04 libgcc-s1=12.3.0-1ubuntu1~22.04
      - name: install compiler
        run: |
          sudo apt update
          sudo apt install ${{ matrix.package }}
      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment/conda-environment-test.yml
          environment-name: ponio-test
      - name: Conda informations
        shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Configure
        shell: bash -l {0}
        run: |
          export LDFLAGS="${LDFLAGS} -L$CONDA_PREFIX/lib"
          CC=${{ matrix.cc }} CXX=${{ matrix.cxx }} cmake \
          . \
          -B ./build \
          -G "Ninja Multi-Config" \
          -DBUILD_TESTS=ON \
          -DBUILD_SAMURAI_DEMOS=ON
      - name: Build
        shell: bash -l {0}
        run: |
          cmake --build ./build --config Release
      - name: Test
        shell: bash -l {0}
        run: |
          export LD_LIBRARY_PATH="$CONDA_PREFIX/lib:$LD_LIBRARY_PATH" ./build/solver/test/Release/ponio_tests
      - name: NotebookTest
        shell: bash -l {0}
        # should fix lotka_volterra_tuto.ipynb and three_body_choregraphy.ipynb to run this command on all solver/notebooks folder
        run: |
          cd solver/notebooks; CXX=${{ matrix.cxx }} pytest --nbval --current-env -p no:warnings
